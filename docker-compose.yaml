version: "3"

networks:
  gitea:
    name: gitea
    driver: bridge

services:
  runner1: &runner
    image: gitea/act_runner:latest
    networks:
      - gitea
    environment: &runner_env
      CONFIG_FILE: /config.yaml
      GITEA_INSTANCE_URL: "http://gitea:3000"
      GITEA_RUNNER_REGISTRATION_TOKEN: "${REGISTRATION_TOKEN}"
      GITEA_RUNNER_NAME: "Runner 1"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner1:/data
  runner2:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 2"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner2:/data
  runner3:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 3"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner3:/data
  runner4:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 4"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner4:/data
  runner5:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 5"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner5:/data
  runner6:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 6"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner6:/data
  runner7:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 7"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner7:/data
  runner8:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 8"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner8:/data
  traefik:
    image: traefik:v2.11.0
    container_name: traefik
    restart: unless-stopped
    networks:
      - gitea
      - default
    command:
      - '--log.level=INFO'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - "--providers.docker.defaultRule=HostRegexp(`{_:{{ index .Labels \"com.docker.compose.service\" }}\\..*}`)"
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.traefik.rule: HostRegexp(`{_:traefik\..*}`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
  verdaccio:
    image: verdaccio/verdaccio
    container_name: 'verdaccio'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.verdaccio.rule: HostRegexp(`{_:verdaccio\..*}`)
      traefik.http.services.verdaccio.loadbalancer.server.port: 4873
    environment:
      - VERDACCIO_PORT=4873
    ports:
      - '4873:4873'
    volumes:
      - './data/verdaccio:/verdaccio/storage'
      - './config/verdaccio:/verdaccio/conf'
  gitea:
    container_name: gitea
    image: gitea/gitea:1.21.7
    restart: always
    networks:
      - gitea
    labels:
      traefik.enable: 'true'
      traefik.http.routers.gitea.rule: HostRegexp(`{_:gitea\..*}`)
      traefik.http.services.gitea.loadbalancer.server.port: 3000
    volumes:
      - ./data/gitea:/data/gitea
      - ./config/gitea:/data/gitea/conf/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:2222"
    depends_on:
       - db
  db:
    image: mysql:8
    restart: always
    networks:
      - gitea
    environment:
       - MYSQL_ROOT_PASSWORD=gitea
       - MYSQL_USER=gitea
       - MYSQL_PASSWORD=gitea
       - MYSQL_DATABASE=gitea
    volumes:
      - ./data/mysql:/var/lib/mysql
  competitor_db:
    image: mysql:8
    restart: always
    environment:
       - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./data/competitor-mysql:/var/lib/mysql
      - "./config/competitor_mysql/competitors.sql:/docker-entrypoint-initdb.d/1.sql"
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor-db.rule: HostRegexp(`{_:db\..*}`)
      traefik.http.services.competitor-db.loadbalancer.server.port: 3306
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    environment:
      PMA_HOST: 'competitor_db'
      PMA_PORT: 3306
    labels:
      traefik.enable: 'true'
      traefik.http.routers.pma.rule: HostRegexp(`{_:pma\..*}`)
      traefik.http.services.pma.loadbalancer.server.port: 80
#  competitor1:
#    image: gitea/competitor1:latest
#    labels:
#      traefik.enable: 'true'
#      traefik.http.routers.competitor1.rule: HostRegexp(`{_:competitor1\..*}`)
#      traefik.http.services.competitor1.loadbalancer.server.port: 3000
#  competitor2:
#    image: gitea/competitor2:latest
#    labels:
#      traefik.enable: 'true'
#      traefik.http.routers.competitor2.rule: HostRegexp(`{_:competitor2\..*}`)
#      traefik.http.services.competitor2.loadbalancer.server.port: 3000