networks:
  gitea:
    name: gitea
    driver: bridge

services:
  runner1: &runner
    image: gitea/act_runner:latest
    networks:
      - gitea
    environment: &runner_env
      CONFIG_FILE: /config.yaml
      GITEA_INSTANCE_URL: "http://gitea:3000"
      GITEA_RUNNER_REGISTRATION_TOKEN: "${REGISTRATION_TOKEN}"
      GITEA_RUNNER_NAME: "Runner 1"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner1:/data
  runner2:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 2"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner2:/data
  runner3:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 3"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner3:/data
  runner4:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 4"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner4:/data
  runner5:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 5"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner5:/data
  runner6:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 6"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner6:/data
  runner7:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 7"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner7:/data
  runner8:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 8"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner8:/data
  runner9:
    <<: *runner
    environment:
      <<: *runner_env
      GITEA_RUNNER_NAME: "Runner 9"
    volumes:
      - ./config/gitea-runner/config.yaml:/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/runner9:/data      
  traefik:
    image: traefik:v2.11.0
    container_name: traefik
    restart: unless-stopped
    networks:
      - gitea
      - default
    command:
      - '--log.level=DEBUG'
      # - '--api.insecure=true'
      - '--providers.file.directory=/etc/traefik/dynamic'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker.defaultRule=HostRegexp(`{_:{{ index .Labels \"com.docker.compose.service\" }}\\..*}`)"
      - "--serversTransport.insecureSkipVerify=true"
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - './letsencrypt:/letsencrypt'
      - './config/traefik/config.yaml:/etc/traefik/dynamic/traefik.yaml'
      - './config/traefik/certs:/etc/certs/'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.traefik.rule: HostRegexp(`{_:traefik\..*}`)
      traefik.http.routers.traefik.entrypoints: websecure
      traefik.http.routers.traefik.tls: true
      traefik.http.services.traefik.loadbalancer.server.port: 8080
  verdaccio:
    image: verdaccio/verdaccio
    container_name: 'verdaccio'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.verdaccio.rule: HostRegexp(`{_:verdaccio\..*}`)
      traefik.http.routers.verdaccio.entrypoints: websecure
      traefik.http.routers.verdaccio.tls: true
      traefik.http.services.verdaccio.loadbalancer.server.port: 4873
    environment:
      - VERDACCIO_PORT=4873
    ports:
      - '4873:4873'
    volumes:
      - './data/verdaccio:/verdaccio/storage'
      - './config/verdaccio:/verdaccio/conf'
  gitea:
    container_name: gitea
    image: gitea/gitea:1.21.7
    restart: always
    networks:
      - gitea
    labels:
      traefik.enable: 'true'
      traefik.http.routers.gitea.rule: Host(`gitea.dineease.com`)
      traefik.http.routers.gitea.entrypoints: websecure
      traefik.http.routers.gitea.tls: true
      traefik.http.services.gitea.loadbalancer.server.port: 3000
    volumes:
      - ./data/gitea:/data/gitea
      - ./config/gitea:/data/gitea/conf/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:2222"
    depends_on:
       - db
  db:
    image: mysql:8
    restart: always
    networks:
      - gitea
    environment:
       - MYSQL_ROOT_PASSWORD=gitea
       - MYSQL_USER=gitea
       - MYSQL_PASSWORD=gitea
       - MYSQL_DATABASE=gitea
    volumes:
      - ./data/mysql:/var/lib/mysql
  competitor_db:
    image: mysql:8
    restart: always
    environment:
       - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./data/competitor-mysql:/var/lib/mysql
      - "./config/competitor_mysql/competitors.sql:/docker-entrypoint-initdb.d/1.sql"
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor-db.rule: HostRegexp(`{_:db\..*}`)
      traefik.http.services.competitor-db.loadbalancer.server.port: 3306
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - db
    environment:
      PMA_HOST: 'competitor_db'
      PMA_PORT: 3306
    labels:
      traefik.enable: 'true'
      traefik.http.routers.pma.rule: HostRegexp(`{_:pma\..*}`)
      traefik.http.services.pma.loadbalancer.server.port: 80
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    network_mode: host
    environment:
      - DOCKER_TLS_VERIFY=0
      - SSL_CERT_FILE=/etc/ssl/cert.pem
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/watchtower/config.json:/config.json
      - ./config/traefik/certs/ca-cert.crt:/etc/ssl/cert.pem
    command: --debug --interval 10 --include-stopped --revive-stopped competitor.*
    labels:
      traefik.enable: 'true'
      traefik.http.routers.watchtower.rule: HostRegexp(`{_:watchtower\..*}`)
      traefik.http.services.watchtower.loadbalancer.server.port: 8080
  competitor1a:
    container_name: competitor1a
    image: gitea.dineease.com/competitor-4621/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor1a.rule: HostRegexp(`{_:competitor-4621-module-a\..*}`)
      traefik.http.services.competitor1a.loadbalancer.server.port: 80
  competitor1b:
    container_name: competitor1b
    image: gitea.dineease.com/competitor-4621/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor1b.rule: HostRegexp(`{_:competitor-4621-module-b\..*}`)
      traefik.http.services.competitor1b.loadbalancer.server.port: 80
  competitor1c:
    container_name: competitor1c
    image: gitea.dineease.com/competitor-4621/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor1c.rule: HostRegexp(`{_:competitor-4621-module-c\..*}`)
      traefik.http.services.competitor1c.loadbalancer.server.port: 80
  competitor2a:
    container_name: competitor2a
    image: gitea.dineease.com/competitor-7552/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor2a.rule: HostRegexp(`{_:competitor-7552-module-a\..*}`)
      traefik.http.services.competitor2a.loadbalancer.server.port: 80
  competitor2b:
    container_name: competitor2b
    image: gitea.dineease.com/competitor-7552/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor2b.rule: HostRegexp(`{_:competitor-7552-module-b\..*}`)
      traefik.http.services.competitor2b.loadbalancer.server.port: 80
  competitor2c:
    container_name: competitor2c
    image: gitea.dineease.com/competitor-7552/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor2c.rule: HostRegexp(`{_:competitor-7552-module-c\..*}`)
      traefik.http.services.competitor2c.loadbalancer.server.port: 80
  competitor3a:
    container_name: competitor3a
    image: gitea.dineease.com/competitor-6513/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor3a.rule: HostRegexp(`{_:competitor-6513-module-a\..*}`)
      traefik.http.services.competitor3a.loadbalancer.server.port: 80
  competitor3b:
    container_name: competitor3b
    image: gitea.dineease.com/competitor-6513/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor3b.rule: HostRegexp(`{_:competitor-6513-module-b\..*}`)
      traefik.http.services.competitor3b.loadbalancer.server.port: 80
  competitor3c:
    container_name: competitor3c
    image: gitea.dineease.com/competitor-6513/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor3c.rule: HostRegexp(`{_:competitor-6513-module-c\..*}`)
      traefik.http.services.competitor3c.loadbalancer.server.port: 80
  competitor4a:
    container_name: competitor4a
    image: gitea.dineease.com/competitor-2494/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor4a.rule: HostRegexp(`{_:competitor-2494-module-a\..*}`)
      traefik.http.services.competitor4a.loadbalancer.server.port: 80
  competitor4b:
    container_name: competitor4b
    image: gitea.dineease.com/competitor-2494/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor4b.rule: HostRegexp(`{_:competitor-2494-module-b\..*}`)
      traefik.http.services.competitor4b.loadbalancer.server.port: 80
  competitor4c:
    container_name: competitor4c
    image: gitea.dineease.com/competitor-2494/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor4c.rule: HostRegexp(`{_:competitor-2494-module-c\..*}`)
      traefik.http.services.competitor4c.loadbalancer.server.port: 80
  competitor5a:
    container_name: competitor5a
    image: gitea.dineease.com/competitor-6455/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor5a.rule: HostRegexp(`{_:competitor-6455-module-a\..*}`)
      traefik.http.services.competitor5a.loadbalancer.server.port: 80
  competitor5b:
    container_name: competitor5b
    image: gitea.dineease.com/competitor-6455/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor5b.rule: HostRegexp(`{_:competitor-6455-module-b\..*}`)
      traefik.http.services.competitor5b.loadbalancer.server.port: 80
  competitor5c:
    container_name: competitor5c
    image: gitea.dineease.com/competitor-6455/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor5c.rule: HostRegexp(`{_:competitor-6455-module-c\..*}`)
      traefik.http.services.competitor5c.loadbalancer.server.port: 80
  competitor6a:
    container_name: competitor6a
    image: gitea.dineease.com/competitor-9546/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor6a.rule: HostRegexp(`{_:competitor-9546-module-a\..*}`)
      traefik.http.services.competitor6a.loadbalancer.server.port: 80
  competitor6b:
    container_name: competitor6b
    image: gitea.dineease.com/competitor-9546/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor6b.rule: HostRegexp(`{_:competitor-9546-module-b\..*}`)
      traefik.http.services.competitor6b.loadbalancer.server.port: 80
  competitor6c:
    container_name: competitor6c
    image: gitea.dineease.com/competitor-9546/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor6c.rule: HostRegexp(`{_:competitor-9546-module-c\..*}`)
      traefik.http.services.competitor6c.loadbalancer.server.port: 80
  competitor9a:
    container_name: competitor9a
    image: gitea.dineease.com/competitor-9999/module-a:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor9a.rule: HostRegexp(`{_:competitor-9999-module-a\..*}`)
      traefik.http.services.competitor9a.loadbalancer.server.port: 80
  competitor9b:
    container_name: competitor9b
    image: gitea.dineease.com/competitor-9999/module-b:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor9b.rule: HostRegexp(`{_:competitor-9999-module-b\..*}`)
      traefik.http.services.competitor9b.loadbalancer.server.port: 80
  competitor9c:
    container_name: competitor9c
    image: gitea.dineease.com/competitor-9999/module-c:latest
    labels:
      traefik.enable: 'true'
      traefik.http.routers.competitor9c.rule: HostRegexp(`{_:competitor-9999-module-c\..*}`)
      traefik.http.services.competitor9c.loadbalancer.server.port: 80